/**
 * generated by Xtext 2.12.0
 */
package iDM_Test.generator;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import fr.inria.diverse.k3.al.annotationprocessor.Step;
import iDM_Test.State;
import iDM_Test.generator.StateAspectStateAspectProperties;

@Aspect(className = State.class)
@SuppressWarnings("all")
public class StateAspect {
  @Step
  public static void step(final State _self, final String inputString) {
    final iDM_Test.generator.StateAspectStateAspectProperties _self_ = iDM_Test.generator.StateAspectStateAspectContext.getSelf(_self);
    fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepCommand command = new fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepCommand() {
    	@Override
    	public void execute() {
    		_privk3_step(_self_, _self,inputString);
    	}
    };
    fr.inria.diverse.k3.al.annotationprocessor.stepmanager.IStepManager stepManager = fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepManagerRegistry.getInstance().findStepManager(_self);
    if (stepManager != null) {
    	stepManager.executeStep(_self,command,"State","step");
    } else {
    	command.execute();
    }
    ;;
  }
  
  protected static void _privk3_step(final StateAspectStateAspectProperties _self_, final State _self, final String inputString) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field trigger is undefined for the type Transition"
      + "\nThe method or field fsm is undefined for the type State"
      + "\nThe method or field fire is undefined for the type Transition"
      + "\noutputBuffer cannot be resolved"
      + "\nenqueue cannot be resolved");
  }
}
